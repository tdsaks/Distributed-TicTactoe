import java.io.Serializable;
import java.util.*;

public class TicTacData implements Serializable{
	private static final long serialVersionUID = 1L;
	
	private static GameBoard board;
	String message, name;
	boolean playerOdd;
	boolean yourTurn;
	static boolean gameEnd, oddWon = false, evenWon = false, draw = false;
	static boolean playAgain = true;
	
	private List<Integer> oddRemain = new ArrayList<Integer>();
	private List<Integer> evenRemain = new ArrayList<Integer>();
	
	public TicTacData(boolean odd) {
		int i = 1;
		board = new GameBoard();
		while (i <= 8) {
			oddRemain.add(i++);
			evenRemain.add(i++);
		}
		oddRemain.add(9);
		playerOdd = odd;
		gameEnd = false;
		oddWon = false;
		evenWon = false;
		draw = false;
		this.yourTurn = odd; //odd player goes first
	}
	
	
	
	public boolean getGameEnd() {
		return gameEnd;
	}
	
	public boolean getOddWon() {
		return oddWon;
	}
	
	public boolean getEvenWon() {
		return evenWon;
	}
	
	public boolean getPlayAgain() {
		return playAgain;
	}
	
	public boolean getDraw() {
		return draw;
	}
	public GameBoard getBoard() {
		return board;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public String getName() {
		return this.name;
	}
	
	public void setMessage(String m) {
		this.message = m;
	}
	
	public String getMessage() {
		return this.message;
	}
	
	public void printMessage() {
		System.out.println(this.message);
	}
	
	public void setEnd() {
		gameEnd = true;
	}
	
	public List<Integer> getOddRemaining(){
		return oddRemain;
	}
	
	public List<Integer> getEvenRemaining(){
		return evenRemain;
	}
	
	public void setOddRemaining(int i) {
		for(int n = 0 ;n < oddRemain.size(); n++) {
			if(oddRemain.get(n) == i) {
				oddRemain.remove(n);
			}
		}
	}
	
	public void setEvenRemaining(int i) {
		for(int n = 0 ;n < evenRemain.size(); n++) {
			if(evenRemain.get(n) == i) {
				evenRemain.remove(n);
			}
		}
	}
	
	public void printRemain(boolean term) {
		List<Integer> remain;
		if(term) {
			remain = oddRemain;
		} else {
			remain = evenRemain;
		}
		System.out.println(remain);
	}
	
	public void switchTurn() {
		this.yourTurn = !yourTurn;
	}
	
}
